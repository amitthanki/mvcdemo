@using ENRLReconSystem.DO
@using ENRLReconSystem.Utility
@model ENRLReconSystem.DO.UISearch
@{
    ViewBag.Title = "Unlock";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    int searchRangeInDays = ConstantTexts.DefaultSearchRangeInDays;
    if (!CacheUtility.GetMasterConfigurationByName(ConstantTexts.GetSearchRangeInDays).IsNullOrEmpty())
    {
        searchRangeInDays = CacheUtility.GetMasterConfigurationByName(ConstantTexts.GetSearchRangeInDays).ToInt32();
    }
}
<style>

    #tblUnlockSearchResult tbody tr td {
       white-space:nowrap;
    }

</style>

<section class="container main-body-wrpr">
    <form id="frmSearch">
        @Html.Partial("~/Views/Shared/_SearchFilterPanel.cshtml", (SearchCriteria)Model.SearchCriteria)
    </form>
    <div id="divSearchResults">
        @Html.Partial("_UnlockSearchResults", Model.UnlockSearchPanel)
    </div>

</section>




@*--------------------------Popup--------------------------*@

<div id="myModalView" class="modal fade">
    <div class="modal-dialog" id="divDialog" style="width:30%;">
        <div class="modal-content" id="divMyModalView">
            <div class="wdgt-wrapper">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="wdgt-hdr">
                    <img src="~/images/login-hdr-img.png" /><h4>Unlock</h4>
                </div>
                <div class="wdgt-body clearfix">
                    <div class="clearfix" style="padding-left:15px;">
                        <label id="lblValidateSummaryPopup" style="color:red;"></label>
                    </div>
                    <div class="form-group textarea col-md-12">
                        <label for="txtDescription" class="required">Comments</label>
                        @Html.TextArea("Comments", null, new { @Id = "txtCommentsPopup", @rows = "4" ,@maxlength="4000", @class = "form-control" })
                    </div>
                    <div class="btn-group clearfix">
                        <button class="btn btn-primary" id="btnUnlock" type="button"><img src="~/images/login-hdr-img.png"><span>Unlock</span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*--------------------------Popup--------------------------*@
@section scripts{
    <script type="text/javascript">
        /////////////Variables/////////
        var  urlUnlock = '@Url.Action("SearchUnlockRecords", "Manager")'
            , urlCheckUserUnlockPermission = '@Url.Action("CheckUserUnlockPermission", "Manager")'
            , urlUnlockRecord = '@Url.Action("UnlockRecord", "Manager")'
            , urlLoadQueue = '@Url.Action("LoadQueue", "Common")'
            , dataTable = null;
            var workBasket='@Model.SearchCriteria.WorkBasketLkup';


        ////////////////Events///////////////
         ///////////To clear all form controls/////////
         $("#btnReset").on("click", function (event) {
             try {
                 MainLayout.fnResetValidationSummary();
                 document.getElementById("frmSearch").reset();
             } catch (e) {
                 MainLayout.fnAlertMessege("Error!", "An error occoured!");
             }
         });
        //////////To cancel this page and redirect to home//////////
         $("#btnSearchCancel").on("click", function (event) {
             try {
                 window.location = '@Url.Action("Home","Home")';
             } catch (e) {
                 MainLayout.fnAlertMessege("Error!", "An error occoured!");
             }

         });
         ///Search
         $("#btnSearch").on("click", function (event) {
             try {
                 fnProcessSearch();
             } catch (e) {
                 MainLayout.fnAlertMessege("Error!", "An error occoured!");
             }
         });
        //To unlock the record.
        $(document).on("click", "#btnUnlock", function (event) {
            try {
                var queueIds = "";
                var checkBoxCount = $('#tblUnlockSearchResult').find('input[type="checkbox"]:checked').length;
                if (checkBoxCount > 0) {
                    $('#tblUnlockSearchResult tbody').find('input[type="checkbox"]:checked').each(function (i, val) {
                        queueIds = queueIds + ((queueIds == "") ? "" : ",") + val.id;
                    });
                }
                else {
                    MainLayout.fnAlertMessege("Alert!", "Please select a case to Unlock.");
                    return false;
                }
                if (fnValidateUnlock())
                {
                    $.ajax({
                        data: { "Gen_QueueIds": queueIds, "CasesComments": $('#txtCommentsPopup').val() },
                        url: urlUnlockRecord,
                        type: "POST",
                        success: function (data) {
                            $("#myModalView").modal('hide');
                            if (data != "" && data == true) {
                                MainLayout.fnAlertMessege("Success", 'Record unlocked successfully!', function () {
                                    fnProcessSearch();
                                });
                            }
                            else {
                                MainLayout.fnAlertMessege("Error!", 'Error occured while unlocking the record.');
                            }
                        },
                        error: function (x) {
                            MainLayout.fnAlertMessege("Error!", "An error occoured!");
                        }
                    });
                }
            } catch (e) {

            }

         });

        //BulkUnlock Clicked
        $(document).on("click", "#btnBlkUnlock", function () {
            try {
                if (fnCheckUserUnlockPermission()) {
                    var checkBoxCount = $('#tblUnlockSearchResult').find('input[type="checkbox"]:checked').length;
                    if (checkBoxCount > 0) {
                        $('#txtCommentsPopup').val("");
                        $("#lblValidateSummaryPopup").html("");
                        $("#lblValidateSummaryPopup").hide();
                        $("#myModalView").modal('show');
                    }
                    else
                    {
                        MainLayout.fnAlertMessege("Alert!", "Please select a case to Unlock.");
                    }

                }
                else {
                    MainLayout.fnAlertMessege("Alert!", "You don't have sufficient permission to perform Unlock.");
                    return false;
                }

            } catch (e) {
                MainLayout.fnAlertMessege("Error!", "An error occoured!");
            }
        });
        ///On Change It will change the Queues
        $(document).on("change", "#ddlDiscrepancyCat", function (event) {
            try {
                var categoryID = $(this).val();
                $("#ddlQueue").empty().append($("<option></option>").val("0").html(enums.DropdownDefaultValue));
                if (categoryID != "" && categoryID != "0") {
                    discCatId = categoryID;
                    fnLoadQueue(categoryID);
                }
            } catch (e) {
                MainLayout.fnAlertMessege("Error!", "An error occoured!");
            }
        });


        ///Select/DeSelect All////////
        $(document).on("click", "#chkAll", function (e) {
            try {
                var rows = dataTable.rows({ 'search': 'applied' }).nodes();
                if ($(this).is(":checked")) {
                    $('input[type="checkbox"]', rows).prop('checked', true);
                }
                else {
                    $('input[type="checkbox"]', rows).prop('checked', false);
                }
            } catch (e) {

            }
        });
        $(document).on('change', '#tblUnlockSearchResult tbody input[type="checkbox"]', function () {
            try {
                var total = dataTable.rows({ 'search': 'applied' }).nodes().length;
                var checked = $(dataTable.rows({ 'search': 'applied' }).nodes()).find('input[type="checkbox"]:checked').length;
                if (total == checked) {
                    $('#chkAll').prop('checked', true);
                    $('#chkAll').prop('indeterminate', false);
                } else if (checked == 0) {
                    $('#chkAll').prop('checked', false);
                    $('#chkAll').prop('indeterminate', false);
                } else {
                    $('#chkAll').prop('indeterminate', true);
                }
            } catch (e) {

            }

        });

        ////////////////////Methods/////////////////////
        fnProcessSearch = function () {
            try {
                if (fnValidateSearch()) {
                    $.ajax({
                        url: urlUnlock,
                        data: $("#frmSearch").serialize(),
                        type: "POST",
                        success: function (data) {
                            if (data != null && data != "") {
                                $('#divSearchResults').empty().html(data);
                                dataTable=MainLayout.fnInitialiseDataTable($("#tblUnlockSearchResult"));
                            }
                        },
                        error: function (x) {
                            MainLayout.fnAlertMessege("Error!", "An error occoured!");
                        },
                    });
                }

            } catch (e) {
                throw e;

            }
        }

        //function to set model date time values from date time picker
        function fnGetDateIntoHdnFields() {
            var date = $('#DiscrepancyStartDate_DPart').val();
            if (date != null && date != '') {
                $('#DiscrepancyStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DiscrepancyStartDate').val(null);
            }
            date = $('#DiscrepancyEndDate_DPart').val();
            if (date != null && date != '') {
                $('#DiscrepancyEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DiscrepancyEndDate').val(null);
            }
            date = $('#DOB_DPart').val();
            if (date != null && date != '') {
                $('#DOB').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DOB').val(null);
            }
            date = $('#FirstLetterMailStartDate_DPart').val();
            if (date != null && date != '') {
                $('#FirstLetterMailStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#FirstLetterMailStartDate').val(null);
            }
            date = $('#FirstLetterMailEndDate_DPart').val();
            if (date != null && date != '') {
                $('#FirstLetterMailEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#FirstLetterMailEndDate').val(null);
            }
            date = $('#SecondLetterMailStartDate_DPart').val();
            if (date != null && date != '') {
                $('#SecondLetterMailStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#SecondLetterMailStartDate').val(null);
            }
            date = $('#SecondLetterMailEndDate_DPart').val();
            if (date != null && date != '') {
                $('#SecondLetterMailEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#SecondLetterMailEndDate').val(null);
            }
            date = $('#ComplianceStartDate_DPart').val();
            if (date != null && date != '') {
                $('#ComplianceStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#ComplianceStartDate').val(null);
            }
            date = $('#ComplianceEndDate_DPart').val();
            if (date != null && date != '') {
                $('#ComplianceEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#ComplianceEndDate').val(null);
            }
            date = $('#CaseCreationStartDate_DPart').val();
            if (date != null && date != '') {
                $('#CaseCreationStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#CaseCreationStartDate').val(null);
            }
            date = $('#CaseCreationEndDate_DPart').val();
            if (date != null && date != '') {
                $('#CaseCreationEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#CaseCreationEndDate').val(null);
            }
            date = $('#MemberResponseVerificationStartDate_DPart').val();
            if (date != null && date != '') {
                $('#MemberResponseVerificationStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#MemberResponseVerificationStartDate').val(null);
            }
            date = $('#MemberResponseVerificationEndDate_DPart').val();
            if (date != null && date != '') {
                $('#MemberResponseVerificationEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#MemberResponseVerificationEndDate').val(null);
            }
            date = $('#RequestedEffectiveStartDate_DPart').val();
            if (date != null && date != '') {
                $('#RequestedEffectiveStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#RequestedEffectiveStartDate').val(null);
            }
            date = $('#RequestedEffectiveEndDate_DPart').val();
            if (date != null && date != '') {
                $('#RequestedEffectiveEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#RequestedEffectiveEndDate').val(null);
            }
            date = $('#AdjustedCreateStartDate_DPart').val();
            if (date != null && date != '') {
                $('#AdjustedCreateStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#AdjustedCreateStartDate').val(null);
            }
            date = $('#AdjustedCreateEndDate_DPart').val();
            if (date != null && date != '') {
                $('#AdjustedCreateEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#AdjustedCreateEndDate').val(null);
            }
            date = $('#RPCSubmissionStartDate_DPart').val();
            if (date != null && date != '') {
                $('#RPCSubmissionStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#RPCSubmissionStartDate').val(null);
            }
            date = $('#RPCSubmissionEndDate_DPart').val();
            if (date != null && date != '') {
                $('#RPCSubmissionEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#RPCSubmissionEndDate').val(null);
            }
            date = $('#CMSAccountManagerApprovalStartDate_DPart').val();
            if (date != null && date != '') {
                $('#CMSAccountManagerApprovalStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#CMSAccountManagerApprovalStartDate').val(null);
            }
            date = $('#CMSAccountManagerApprovalEndDate_DPart').val();
            if (date != null && date != '') {
                $('#CMSAccountManagerApprovalEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#CMSAccountManagerApprovalEndDate').val(null);
            }
            date = $('#FDRReceivedStartDate_DPart').val();
            if (date != null && date != '') {
                $('#FDRReceivedStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#FDRReceivedStartDate').val(null);
            }
            date = $('#FDRReceivedEndDate_DPart').val();
            if (date != null && date != '') {
                $('#FDRReceivedEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#FDRReceivedEndDate').val(null);
            }
            date = $('#PeerAuditCompletionStartDate_DPart').val();
            if (date != null && date != '') {
                $('#PeerAuditCompletionStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#PeerAuditCompletionStartDate').val(null);
            }
            date = $('#PeerAuditCompletionEndDate_DPart').val();
            if (date != null && date != '') {
                $('#PeerAuditCompletionEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#PeerAuditCompletionEndDate').val(null);
            }
            date = $('#DisenrollmentFromDate_DPart').val();
            if (date != null && date != '') {
                $('#DisenrollmentFromDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DisenrollmentFromDate').val(null);
            }
            date = $('#DisenrollmentToDate_DPart').val();
            if (date != null && date != '') {
                $('#DisenrollmentToDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DisenrollmentToDate').val(null);
            }
        };
        ///
        window.onload = function () {
            if ($('#DiscrepancyStartDate').val() != null && $('#DiscrepancyStartDate').val() != "") {
                $('#DiscrepancyStartDate_DPart').val(getDateTimeInMMDDYYYY($('#DiscrepancyStartDate').val()));
            }
            if ($('#DiscrepancyEndDate').val() != null && $('#DiscrepancyEndDate').val() != "") {
                $('#DiscrepancyEndDate_DPart').val(getDateTimeInMMDDYYYY($('#DiscrepancyEndDate').val()));
            }
            if ($('#DOB').val() != null && $('#DOB').val() != "") {
                $('#DOB_DPart').val(getDateTimeInMMDDYYYY($('#DOB').val()));
            }
            if ($('#FirstLetterMailStartDate').val() != null && $('#FirstLetterMailStartDate').val() != "") {
                $('#FirstLetterMailStartDate_DPart').val(getDateTimeInMMDDYYYY($('#FirstLetterMailStartDate').val()));
            }
            if ($('#FirstLetterMailEndDate').val() != null && $('#FirstLetterMailEndDate').val() != "") {
                $('#FirstLetterMailEndDate_DPart').val(getDateTimeInMMDDYYYY($('#FirstLetterMailEndDate').val()));
            }
            if ($('#SecondLetterMailStartDate').val() != null && $('#SecondLetterMailStartDate').val() != "") {
                $('#SecondLetterMailStartDate_DPart').val(getDateTimeInMMDDYYYY($('#SecondLetterMailStartDate').val()));
            }
            if ($('#SecondLetterMailEndDate').val() != null && $('#SecondLetterMailEndDate').val() != "") {
                $('#SecondLetterMailEndDate_DPart').val(getDateTimeInMMDDYYYY($('#SecondLetterMailEndDate').val()));
            }
            if ($('#ComplianceStartDate').val() != null && $('#ComplianceStartDate').val() != "") {
                $('#ComplianceStartDate_DPart').val(getDateTimeInMMDDYYYY($('#ComplianceStartDate').val()));
            }
            if ($('#ComplianceEndDate').val() != null && $('#ComplianceEndDate').val() != "") {
                $('#ComplianceEndDate_DPart').val(getDateTimeInMMDDYYYY($('#ComplianceEndDate').val()));
            }
            if ($('#CaseCreationStartDate').val() != null && $('#CaseCreationStartDate').val() != "") {
                $('#CaseCreationStartDate_DPart').val(getDateTimeInMMDDYYYY($('#CaseCreationStartDate').val()));
            }
            if ($('#CaseCreationEndDate').val() != null && $('#CaseCreationEndDate').val() != "") {
                $('#CaseCreationEndDate_DPart').val(getDateTimeInMMDDYYYY($('#CaseCreationEndDate').val()));
            }
            if ($('#MemberResponseVerificationStartDate').val() != null && $('#MemberResponseVerificationStartDate').val() != "") {
                $('#MemberResponseVerificationStartDate_DPart').val(getDateTimeInMMDDYYYY($('#MemberResponseVerificationStartDate').val()));
            }
            if ($('#MemberResponseVerificationEndDate').val() != null && $('#MemberResponseVerificationEndDate').val() != "") {
                $('#MemberResponseVerificationEndDate_DPart').val(getDateTimeInMMDDYYYY($('#MemberResponseVerificationEndDate').val()));
            }
            if ($('#RequestedEffectiveStartDate').val() != null && $('#RequestedEffectiveStartDate').val() != "") {
                $('#RequestedEffectiveStartDate_DPart').val(getDateTimeInMMDDYYYY($('#RequestedEffectiveStartDate').val()));
            }
            if ($('#RequestedEffectiveEndDate').val() != null && $('#RequestedEffectiveEndDate').val() != "") {
                $('#RequestedEffectiveEndDate_DPart').val(getDateTimeInMMDDYYYY($('#RequestedEffectiveEndDate').val()));
            }
            if ($('#AdjustedCreateStartDate').val() != null && $('#AdjustedCreateStartDate').val() != "") {
                $('#AdjustedCreateStartDate_DPart').val(getDateTimeInMMDDYYYY($('#AdjustedCreateStartDate').val()));
            }
            if ($('#AdjustedCreateEndDate').val() != null && $('#AdjustedCreateEndDate').val() != "") {
                $('#AdjustedCreateEndDate_DPart').val(getDateTimeInMMDDYYYY($('#AdjustedCreateEndDate').val()));
            }
            if ($('#RPCSubmissionStartDate').val() != null && $('#RPCSubmissionStartDate').val() != "") {
                $('#RPCSubmissionStartDate_DPart').val(getDateTimeInMMDDYYYY($('#RPCSubmissionStartDate').val()));
            }
            if ($('#RPCSubmissionEndDate').val() != null && $('#RPCSubmissionEndDate').val() != "") {
                $('#RPCSubmissionEndDate_DPart').val(getDateTimeInMMDDYYYY($('#RPCSubmissionEndDate').val()));
            }
            if ($('#CMSAccountManagerApprovalStartDate').val() != null && $('#CMSAccountManagerApprovalStartDate').val() != "") {
                $('#CMSAccountManagerApprovalStartDate_DPart').val(getDateTimeInMMDDYYYY($('#CMSAccountManagerApprovalStartDate').val()));
            }
            if ($('#CMSAccountManagerApprovalEndDate').val() != null && $('#CMSAccountManagerApprovalEndDate').val() != "") {
                $('#CMSAccountManagerApprovalEndDate_DPart').val(getDateTimeInMMDDYYYY($('#CMSAccountManagerApprovalEndDate').val()));
            }
            if ($('#FDRReceivedStartDate').val() != null && $('#FDRReceivedStartDate').val() != "") {
                $('#FDRReceivedStartDate_DPart').val(getDateTimeInMMDDYYYY($('#FDRReceivedStartDate').val()));
            }
            if ($('#FDRReceivedEndDate').val() != null && $('#FDRReceivedEndDate').val() != "") {
                $('#FDRReceivedEndDate_DPart').val(getDateTimeInMMDDYYYY($('#FDRReceivedEndDate').val()));
            }
            if ($('#PeerAuditCompletionStartDate').val() != null && $('#PeerAuditCompletionStartDate').val() != "") {
                $('#PeerAuditCompletionStartDate_DPart').val(getDateTimeInMMDDYYYY($('#PeerAuditCompletionStartDate').val()));
            }
            if ($('#PeerAuditCompletionEndDate').val() != null && $('#PeerAuditCompletionEndDate').val() != "") {
                $('#PeerAuditCompletionEndDate_DPart').val(getDateTimeInMMDDYYYY($('#PeerAuditCompletionEndDate').val()));
            }
            if ($('#DisenrollmentFromDate').length > 0 && $('#DisenrollmentFromDate').val() != null && $('#DisenrollmentFromDate').val() != "") {
                $('#DisenrollmentFromDate_DPart').val(getDateTimeInMMDDYYYY($('#DisenrollmentFromDate').val()));
            }
            if ($('#DisenrollmentToDate').length > 0 && $('#DisenrollmentToDate').val() != null && $('#DisenrollmentToDate').val() != "") {
                $('#DisenrollmentToDate_DPart').val(getDateTimeInMMDDYYYY($('#DisenrollmentToDate').val()));
            }
        };
        ///CheckUser has unlock permission/////
        fnCheckUserUnlockPermission = function () {
            try {
                var ret = true;
                $.ajax({
                    url: urlCheckUserUnlockPermission,
                    data: {},
                    type: "POST",
                    async: false,
                    success: function (data) {
                        if (data.Data) {
                            ret = false;
                        }
                    },
                    error: function (x) {
                    },
                });
                return ret;

            } catch (e) {

            }

        };
        //Validate Before Unlock//
        fnValidateUnlock = function () {
            try {
                $("#lblValidateSummaryPopup").html("");
                $("#lblValidateSummaryPopup").hide();
                if ($('#txtCommentsPopup').val() == "") {
                    $("#lblValidateSummaryPopup").html("Please enter comments.");
                    $("#lblValidateSummaryPopup").show();
                    return false;
                }
                return true;
            } catch (e) {

            }
        };
        //////////////////////////////

        ///Validate before Search/////
        fnValidateSearch = function () {
            try {
             fnGetDateIntoHdnFields();
             MainLayout.fnResetValidationSummary();
             var StartDate = ($("#CaseCreationStartDate_DPart").val() != "") ? new Date($('#CaseCreationStartDate').val()) : null;
             var EndDate = ($("#CaseCreationEndDate_DPart").val() != "") ? new Date($('#CaseCreationEndDate').val()) : null;
             var LastUpdatedOnStartDate = ($("#LastUpdatedStartDate_DPart").val() != "") ? new Date($('#LastUpdatedStartDate').val()) : null;
             var LastUpdatedOnEndDate = ($("#LastUpdatedEndDate_DPart").val() != "") ? new Date($('#LastUpdatedEndDate').val()) : null;
             var ComplianceStartDate = ($("#ComplianceStartDate_DPart").val() != "") ? new Date($('#ComplianceStartDate').val()) : null;
             var ComplianceEndDate = ($("#ComplianceEndDate_DPart").val() != "") ? new Date($('#ComplianceEndDate').val()) : null;

            var today = new Date();
            var errorList = "";
            var isValid = true;
            today.setHours(0, 0, 0, 0);

            if ($('#txtWorkItemID').val() == "" && $('#CaseCreationStartDate_DPart').val() == "" && $('#CaseCreationEndDate_DPart').val() == "" && $('#LastUpdatedStartDate_DPart').val() == "" && $('#LastUpdatedEndDate_DPart').val() == "" && $('#txtCurrentHICN').val() == "" && $('#ddlDiscrepancyCat').val() == "" && $('#ddlDiscrepancyType').val() == "") {
                errorList = errorList + "To perform a Unlock search, you must enter one of the following: ERS Case ID, Created Date(From), Created Date(To),Last Updated On(Form),Last Updated On(To), Discrepancy Category , Discrepancy Type.";
                isValid = false;
            }
            else {
                if (((StartDate == null || StartDate == '') && (EndDate != null && EndDate != '')) || ((StartDate != null && StartDate != '') && (EndDate == null || EndDate == ''))) {
                    if (StartDate == null || StartDate == '') {
                        $('#CaseCreationStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Created Date(From) must be provided when Created Date(To) is present</li>';
                        isValid = false;
                    }
                    else if (EndDate == null || EndDate == '') {
                        $('#CaseCreationEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Created Date(To) must be provided when Start Date is present</li>';
                        isValid = false;
                    }
                }
                else if (EndDate > today) {
                    $('#CaseCreationEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                    errorList = errorList + '<li>Created Date(To) cannot be future Date.</li>';
                    isValid = false;
                } else {
                    if (StartDate > EndDate) {
                        $('#CaseCreationStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Created Date(From) must be less than  End Date.</li>';
                        isValid = false;
                    } else if (StartDate != null && EndDate != null) {
                        var diff = daysBetween(EndDate, StartDate);
                        if (diff > @searchRangeInDays) {
                            $('#CaseCreationStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            $('#CaseCreationEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Created Date(From) and Created Date(To) range cannot be greater than '+ @searchRangeInDays +' days</li>';
                            isValid = false;
                        }
                    }
                }
                if (StartDate > today) {
                    $('#CaseCreationStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                    errorList = errorList + '<li>Created Date(From) cannot be future Date.</li>';
                    isValid = false;
                }

                if (((LastUpdatedOnStartDate == null || LastUpdatedOnStartDate == '') && (LastUpdatedOnEndDate != null && LastUpdatedOnEndDate != '')) || ((LastUpdatedOnStartDate != null && LastUpdatedOnStartDate != '') && (LastUpdatedOnEndDate == null || LastUpdatedOnEndDate == ''))) {
                    if (LastUpdatedOnStartDate == null || LastUpdatedOnStartDate == '') {
                        $('#LastUpdatedStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Last Updated On(From) must be provided when Last Updated On(To) is present</li>';
                        isValid = false;
                    }
                    else if (LastUpdatedOnEndDate == null || LastUpdatedOnEndDate == '') {
                        $('#LastUpdatedEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Last Updated On(To) must be provided when Last Updated On(From) is present</li>';
                        isValid = false;
                    }
                }
                else if (LastUpdatedOnEndDate > today) {
                    $('#LastUpdatedEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                    errorList = errorList + '<li>Last Updated On(To) cannot be future Date.</li>';
                    isValid = false;
                } else {
                    if (LastUpdatedOnStartDate > LastUpdatedOnEndDate) {
                        $('#LastUpdatedStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Last Updated On(From) must be less than  Last Updated On(To).</li>';
                        isValid = false;
                    } else if (LastUpdatedOnStartDate != null && LastUpdatedOnEndDate != null) {
                        var diff = daysBetween(LastUpdatedOnEndDate, LastUpdatedOnStartDate);
                        if (diff > @searchRangeInDays) {
                            $('#LastUpdatedStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            $('#LastUpdatedEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Last Updated On(From) and Last Updated On(To) range cannot be greater than '+ @searchRangeInDays +' days</li>';
                            isValid = false;
                        }
                    }
                }
                if (LastUpdatedOnStartDate > today) {
                    $('#LastUpdatedStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                    errorList = errorList + '<li>Last Updated On(From) cannot be future Date.</li>';
                    isValid = false;
                }


                if (((ComplianceStartDate == null || ComplianceStartDate == '') && (ComplianceEndDate != null && ComplianceEndDate != '')) || ((ComplianceStartDate != null && ComplianceStartDate != '') && (ComplianceEndDate == null || ComplianceEndDate == ''))) {
                    if (ComplianceStartDate == null || ComplianceStartDate == '') {
                        $('#ComplianceStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Compliance Start Date(From) must be provided when Compliance Start Date(To) is present</li>';
                        isValid = false;
                    }
                    else if (LastUpdatedOnEndDate == null || LastUpdatedOnEndDate == '') {
                        $('#ComplianceEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Compliance Start Date(To) must be provided when Compliance Start Date(From) is present</li>';
                        isValid = false;
                    }
                }
                else if (ComplianceEndDate > today) {
                    $('#ComplianceEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                    errorList = errorList + '<li>Compliance Start Date(To) cannot be future Date.</li>';
                    isValid = false;
                } else {
                    if (ComplianceStartDate > ComplianceEndDate) {
                        $('#ComplianceStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Compliance Start Date(From) must be less than  Compliance Start Date(To).</li>';
                        isValid = false;
                    } else if (ComplianceStartDate != null && ComplianceEndDate != null) {
                        var diff = daysBetween(ComplianceEndDate, ComplianceStartDate);
                        if (diff > @searchRangeInDays) {
                            $('#ComplianceStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            $('#ComplianceEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Compliance Start Date(From) and Compliance Start Date(To) range cannot be greater than '+ @searchRangeInDays +' days</li>';
                            isValid = false;
                        }
                    }
                }
                if (ComplianceStartDate > today) {
                    $('#ComplianceStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                    errorList = errorList + '<li>Compliance Start Date(From) cannot be future Date.</li>';
                    isValid = false;
                }

                ///////////
                if ($("#txtWorkItemID").val() == "" && $("#txtCurrentHICN").val() == "" && $("#txtGPSHouseholdIDSearch").val() == "") {
                    if (workBasket == "3001") {
                        if ($('#ComplianceStartDate_DPart').val() == "" && $('#ComplianceEndDate_DPart').val() == "") {
                            errorList = errorList + "Compliance Start Date(From)  and Compliance Start Date(To) is required.";
                            isValid = false;
                        }
                    }
                    else {
                        if ($('#CaseCreationStartDate_DPart').val() == "" && $('#CaseCreationEndDate_DPart').val() == "") {
                            errorList = errorList + "Created Date(From)  and Created Date(To) is required.";
                            isValid = false;
                        }
                    }
                }
               //////////


            }

            if (!isValid) {
                if ($('.validation-summary-errors').length != 0) {
                    //if validion errors div is present add errors to list
                    $('.validation-summary-errors ul').append(errorList);
                } else {
                    //if validion errors div is not present update validation-summary-valid div and add errors to list
                    $('.validation-summary-valid').addClass('validation-summary-errors').removeClass('validation-summary-valid');
                    $('.validation-summary-errors ul').append(errorList);
                }
            }
            return isValid;
            } catch (e) {
                throw e;
            }
        };



        fnLoadQueue = function (categoryID) {
            try {
                $.ajax({
                    url: urlLoadQueue,
                    data: JSON.stringify({ "categoryID": categoryID }),
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data != null && data != "") {
                            $.each(data, function (i, val) {
                                $("#ddlQueue").append($("<option></option>").val(val.CMN_LookupMasterChildRef).html(val.LookupMasterChildValue));
                            });

                        }
                    },
                    error: function (x) {
                        MainLayout.fnAlertMessege("Error!", "An error occoured!");
                    },
                });

            } catch (e) {
                throw ex;
            }
        };
        ///
        $(document).on("keypress", function (e) {
            try {
                if (e.which == 13 && !$(e.target).is("textarea") && $("#btnSearch").is(":visible") && $("#btnSearch").length > 0) {
                    fnProcessSearch();
                }

            } catch (e) {

            }
        });

        //////////////////////Initialise Datatable///////////////////
        dataTable=MainLayout.fnInitialiseDataTable($("#tblUnlockSearchResult"));

    </script>
}
