@using ENRLReconSystem.DO
@using ENRLReconSystem.Utility
@model ENRLReconSystem.DO.UISearch
@{
    ViewBag.Title = "Reassign";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    int searchRangeInDays = ConstantTexts.DefaultSearchRangeInDays;
    if (!CacheUtility.GetMasterConfigurationByName(ConstantTexts.GetSearchRangeInDays).IsNullOrEmpty())
    {
        searchRangeInDays = CacheUtility.GetMasterConfigurationByName(ConstantTexts.GetSearchRangeInDays).ToInt32();
    }
}



<style>

    #tblSearchResult tbody tr td {
        white-space: nowrap;
    }
</style>
<input id="pageName" type="hidden" value="@ViewBag.pageName" />
<section class="container main-body-wrpr">
    <form id="frmSearch">
        @*@Html.Partial("_SearchFilterPanel", Model.SearchCriteria)*@
        @Html.Partial("~/Views/Shared/_SearchFilterPanel.cshtml", (SearchCriteria)Model.SearchCriteria)
    </form>
    <div id="divSearchResults">
        @Html.Partial("_ReAssignSearchResults",Model.UnlockSearchPanel)
    </div>
</section>


@*------------------- Modal -------------------------*@
<div id="myBulkReassignModalView" class="modal fade">
    <div class="modal-dialog" id="divDialog" style="width:60%;">
        <div class="modal-content" id="divMyModalView">
  
        </div>
    </div>
</div>
@* ----------------- *@
@section scripts{
    <script>

        var urlForLock = '@Url.Action("GetLockedRecordOrLockRecord", "RecordsLocked")';
        var urlCheckSearchPermission = '@Url.Action("CheckSearchPermission", "Common")';
        var urlCheckUserBulkReassignPermission = '@Url.Action("CheckUserBulkReassignPermission", "Manager")';
        var urlReAssign = '@Url.Action("ReAssign", "Manager")';
        var urlBulkReassignRecord = '@Url.Action("BulkReassignRecord", "Manager")';
        var urlReassignUserList = '@Url.Action("ReassignUserList", "Manager")';
        var dataTable;
        var urlLoadQueue = '@Url.Action("LoadQueue", "Common")';
        var workBasket='@Model.SearchCriteria.WorkBasketLkup';

        ///////////////////Events//////////////////////////

          //To clear all form controls
        $("#btnReset").on("click", function (event) {
            document.getElementById("frmSearch").reset();
        });
        //To cancel this page and redirect to home
        $("#btnSearchCancel").on("click",  function (event) {
            window.location = '@Url.Action("Home","Home")';
        });
        ///Check Search permission and search/////////
        $("#btnSearch").on("click", function (event) {
            try {
                fnProcessSearch();
            } catch (e) {
                MainLayout.fnAlertMessege("Error!", "An error occoured!");
            }

        });


        $(document).on("click", "#btnBlkReassign", function (event) {
            try {
                //Check user has reaasign permission
                $.ajax({
                    url: urlCheckUserBulkReassignPermission,
                    type: "POST",
                    success: function (data) {
                        if (data != "" && data == true) {
                            var checkBoxCount = $('#tblSearchResult').find('input[type="checkbox"]:checked').length;
                            if (checkBoxCount > 0) {
                                var queueIds = "";
                                $('#tblSearchResult tbody').find('input[type="checkbox"]:checked').each(function (i, val) {
                                    queueIds = queueIds + ((queueIds == "") ? "" : ",") + val.id;
                                });
                                $.ajax({
                                    url: urlReassignUserList,
                                    data: { "Gen_QueueIds": queueIds },
                                    type: "POST",
                                    success: function (data) {
                                        if (data != "" && data != null) {
                                            $('#divMyModalView').empty().html(data);
                                            $("#myBulkReassignModalView").modal('show');
                                        } else {
                                            MainLayout.fnAlertMessege("Alert!", 'Please check access group permission to the user to whom you want to reassign.')
                                        }
                                    },
                                    error: function (x) {
                                        MainLayout.fnAlertMessege("Alert!", "An error occoured");
                                    }
                                });
                            }
                            else {
                                MainLayout.fnAlertMessege("Alert!", 'Please select a record to Assign');
                            }
                        }
                        else {
                            MainLayout.fnAlertMessege("Alert!", "You dont have permission.");

                        }
                    },
                    error: function (x) {
                        MainLayout.fnAlertMessege("Alert!", "An error occoured");
                    }
                });

            } catch (e) {
                MainLayout.fnAlertMessege("Alert!", "An error occoured");
            }

        });
        ///While Assigning from Popup///
        $(document).on("click", "#btnBulkReassign", function (event) {
            try {
                $("#lblValidateSummaryPopup").html("");
                $("#lblValidateSummaryPopup").hide();
                var Comments = $('#txtBulkComments').val();
                var reAssignUserRef = $('#ddlBulkReassignUsers').val();
                var selectedRecords = new Array;
                $('#tblSearchResult tbody').find('input[type="checkbox"]:checked').each(function () {
                    selectedRecords.push($(this)[0].id);
                });

                if (reAssignUserRef == "" || reAssignUserRef == 0) {
                    $("#lblValidateSummaryPopup").html("Please select Reassign To.");
                    $("#ddlBulkReassignUsers").focus();
                    $("#lblValidateSummaryPopup").show();
                    return false;
                }
                if (Comments == "") {
                    $("#lblValidateSummaryPopup").html("Please enter comments.");
                    $("#txtBulkComments").focus();
                    $("#lblValidateSummaryPopup").show();
                    return false;

                }
              // if (!enums.CommentsRegularExpression.test(Comments)) {
               //    $("#lblValidateSummaryPopup").html("Please enter valid comments.");
                //   $("#txtBulkComments").focus();
               //    $("#lblValidateSummaryPopup").show();
               //     return false;
               //}
                $.ajax({
                    url: urlBulkReassignRecord,
                    data: { QueueIds: selectedRecords, DOGEN_ManageCases: { CasesComments: Comments, ReAssignUserRef: reAssignUserRef } },
                    type: "POST",
                    success: function (data) {
                        if (data != "" && data == true) {
                            MainLayout.fnAlertMessege("Success", "Record reassigned successfully.", function () {
                                $("#myBulkReassignModalView").modal('hide');
                                $('#btnSearch').click();
                            });
                        }
                        else {
                            $("#lblValidateSummaryPopup").html("Please check access group permission to the user to whom you want to reassign.");
                            $("#lblValidateSummaryPopup").show();
                        }
                    },
                    error: function (x) {
                        MainLayout.fnAlertMessege("Alert!", "An error occoured");
                    }
                });
            } catch (e) {
                MainLayout.fnAlertMessege("Alert!", "An error occoured.");
            }
        });
        ///Select/DeSelect All////////
        $(document).on("click", "#chkAll", function (e) {
            try {
                var rows = dataTable.rows({ 'search': 'applied' }).nodes();
                if ($(this).is(":checked")) {
                    $('input[type="checkbox"]', rows).prop('checked', true);
                }
                else {
                    $('input[type="checkbox"]', rows).prop('checked', false);
                }
            } catch (e) {

            }
        });
        $(document).on('change', '#tblSearchResult tbody input[type="checkbox"]', function () {
            try {
                var total = dataTable.rows({ 'search': 'applied' }).nodes().length;
                var checked = $(dataTable.rows({ 'search': 'applied' }).nodes()).find('input[type="checkbox"]:checked').length;
                if (total == checked) {
                    $('#chkAll').prop('checked', true);
                    $('#chkAll').prop('indeterminate', false);
                } else if (checked == 0) {
                    $('#chkAll').prop('checked', false);
                    $('#chkAll').prop('indeterminate', false);
                } else {
                    $('#chkAll').prop('indeterminate', true);
                }
            } catch (e) {

            }

        });


        ///////////////////////////////////////
        ///Validate before Search/////
        fnProcessSearch = function () {
            try {
                if (fnValidateSearch()) {
                    $.ajax({
                        url: urlCheckSearchPermission,
                        type: "POST",
                        success: function (data) {
                            if (data == true) {
                                $.ajax({
                                    url: urlReAssign,
                                    data: $("#frmSearch").serialize(),
                                    type: "POST",
                                    success: function (data) {
                                        if (data != null && data != "") {
                                            $('#divSearchResults').empty().html(data);
                                            dataTable = MainLayout.fnInitialiseDataTable($('#tblSearchResult'));
                                        }
                                        else {
                                            $('#divSearchResults tbody').empty();
                                            MainLayout.fnAlertMessege("Alert!", "You don't have search permission.");
                                        }
                                    },
                                    error: function (x) {
                                        MainLayout.fnAlertMessege("Alert!", "You don't have search permission.");
                                    },
                                });

                            } else {
                                MainLayout.fnAlertMessege("Alert!", "You don't have search permission.");
                            }
                        },
                        error: function (x) {
                            MainLayout.fnAlertMessege("Error!", "An error occoured!");
                        },
                    });
                }

            } catch (e) {
                throw ex;

            }
        };
        ///
        fnValidateSearch = function () {
            try {
                fnGetDateIntoHdnFields();
                MainLayout.fnResetValidationSummary();
                var StartDate = ($("#CaseCreationStartDate_DPart").val() != "") ? new Date($('#CaseCreationStartDate').val()) : null;
                var EndDate = ($("#CaseCreationEndDate_DPart").val() != "") ? new Date($('#CaseCreationEndDate').val()) : null;
                var LastUpdatedOnStartDate = ($("#LastUpdatedStartDate_DPart").val() != "") ? new Date($('#LastUpdatedStartDate').val()) : null;
                var LastUpdatedOnEndDate = ($("#LastUpdatedEndDate_DPart").val() != "") ? new Date($('#LastUpdatedEndDate').val()) : null;
                var ComplianceStartDate = ($("#ComplianceStartDate_DPart").val() != "") ? new Date($('#ComplianceStartDate').val()) : null;
                var ComplianceEndDate = ($("#ComplianceEndDate_DPart").val() != "") ? new Date($('#ComplianceEndDate').val()) : null;

                var today = new Date();
                var errorList = "";
                var isValid = true;
                today.setHours(0, 0, 0, 0);

                if ($('#txtWorkItemID').val() == "" && $('#CaseCreationStartDate_DPart').val() == "" && $('#CaseCreationEndDate_DPart').val() == "" && $('#LastUpdatedStartDate_DPart').val() == "" && $('#LastUpdatedEndDate_DPart').val() == "" && $('#txtCurrentHICN').val() == "" && $('#ddlDiscrepancyCat').val() == "" && $('#ddlDiscrepancyType').val() == "") {
                    errorList = errorList + "To perform a Reassign search, you must enter one of the following: ERS Case ID, Created Date(From), Created Date(To), Discrepancy Category, Discrepancy Type.";
                    isValid = false;
                }
                else {
                    if (((StartDate == null || StartDate == '') && (EndDate != null && EndDate != '')) || ((StartDate != null && StartDate != '') && (EndDate == null || EndDate == ''))) {
                        if (StartDate == null || StartDate == '') {
                            $('#CaseCreationStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Created Date(From) must be provided when Created Date(To) is present</li>';
                            isValid = false;
                        }
                        else if (EndDate == null || EndDate == '') {
                            $('#CaseCreationEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Created Date(To) must be provided when Start Date is present</li>';
                            isValid = false;
                        }
                    }
                    else if (EndDate > today) {
                        $('#CaseCreationEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Created Date(To) cannot be future Date.</li>';
                        isValid = false;
                    } else {
                        if (StartDate > EndDate) {
                            $('#CaseCreationStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Created Date(From) must be less than  End Date.</li>';
                            isValid = false;
                        } else if (StartDate != null && EndDate != null) {
                            var diff = daysBetween(EndDate, StartDate);
                            if (diff > @searchRangeInDays) {
                                $('#CaseCreationStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                                $('#CaseCreationEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                                errorList = errorList + '<li>Created Date(From) and Created Date(To) range cannot be greater than '+ @searchRangeInDays +' days</li>';
                                isValid = false;
                            }
                        }
                    }
                    if (StartDate > today) {
                        $('#CaseCreationStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Created Date(From) cannot be future Date.</li>';
                        isValid = false;
                    }

                    if (((LastUpdatedOnStartDate == null || LastUpdatedOnStartDate == '') && (LastUpdatedOnEndDate != null && LastUpdatedOnEndDate != '')) || ((LastUpdatedOnStartDate != null && LastUpdatedOnStartDate != '') && (LastUpdatedOnEndDate == null || LastUpdatedOnEndDate == ''))) {
                        if (LastUpdatedOnStartDate == null || LastUpdatedOnStartDate == '') {
                            $('#LastUpdatedStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Last Updated On(From) must be provided when Last Updated On(To) is present</li>';
                            isValid = false;
                        }
                        else if (LastUpdatedOnEndDate == null || LastUpdatedOnEndDate == '') {
                            $('#LastUpdatedEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Last Updated On(To) must be provided when Last Updated On(From) is present</li>';
                            isValid = false;
                        }
                    }
                    else if (LastUpdatedOnEndDate > today) {
                        $('#LastUpdatedEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Last Updated On(To) cannot be future Date.</li>';
                        isValid = false;
                    } else {
                        if (LastUpdatedOnStartDate > LastUpdatedOnEndDate) {
                            $('#LastUpdatedStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Last Updated On(From) must be less than  Last Updated On(To).</li>';
                            isValid = false;
                        } else if (LastUpdatedOnStartDate != null && LastUpdatedOnEndDate != null) {
                            var diff = daysBetween(LastUpdatedOnEndDate, LastUpdatedOnStartDate);
                            if (diff > @searchRangeInDays) {
                                $('#LastUpdatedStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                                $('#LastUpdatedEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                                errorList = errorList + '<li>Last Updated On(From) and Last Updated On(To) range cannot be greater than '+ @searchRangeInDays +' days</li>';
                                isValid = false;
                            }
                        }
                    }
                    if (LastUpdatedOnStartDate > today) {
                        $('#LastUpdatedStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Last Updated On(From) cannot be future Date.</li>';
                        isValid = false;
                    }

                    if (((ComplianceStartDate == null || ComplianceStartDate == '') && (ComplianceEndDate != null && ComplianceEndDate != '')) || ((ComplianceStartDate != null && ComplianceStartDate != '') && (ComplianceEndDate == null || ComplianceEndDate == ''))) {
                        if (ComplianceStartDate == null || ComplianceStartDate == '') {
                            $('#ComplianceStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Compliance Start Date(From) must be provided when Compliance Start Date(To) is present</li>';
                            isValid = false;
                        }
                        else if (LastUpdatedOnEndDate == null || LastUpdatedOnEndDate == '') {
                            $('#ComplianceEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Compliance Start Date(To) must be provided when Compliance Start Date(From) is present</li>';
                            isValid = false;
                        }
                    }
                    else if (ComplianceEndDate > today) {
                        $('#ComplianceEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Compliance Start Date(To) cannot be future Date.</li>';
                        isValid = false;
                    } else {
                        if (ComplianceStartDate > ComplianceEndDate) {
                            $('#ComplianceStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                            errorList = errorList + '<li>Compliance Start Date(From) must be less than  Compliance Start Date(To).</li>';
                            isValid = false;
                        } else if (ComplianceStartDate != null && ComplianceEndDate != null) {
                            var diff = daysBetween(ComplianceEndDate, ComplianceStartDate);
                            if (diff > @searchRangeInDays) {
                                $('#ComplianceStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                                $('#ComplianceEndDate_DPart').removeClass("valid").addClass("input-validation-error");
                                errorList = errorList + '<li>Compliance Start Date(From) and Compliance Start Date(To) range cannot be greater than '+ @searchRangeInDays+' days</li>';
                                isValid = false;
                            }
                        }
                    }
                    if (ComplianceStartDate > today) {
                        $('#ComplianceStartDate_DPart').removeClass("valid").addClass("input-validation-error");
                        errorList = errorList + '<li>Compliance Start Date(From) cannot be future Date.</li>';
                        isValid = false;
                    }
                    ///////////
                    if ($("#txtWorkItemID").val() == "" && $("#txtCurrentHICN").val() == "" && $("#txtGPSHouseholdIDSearch").val() == "") {
                        if (workBasket == "3001") {
                            if ($('#ComplianceStartDate_DPart').val() == "" && $('#ComplianceEndDate_DPart').val() == "") {
                                errorList = errorList + "Compliance Start Date(From)  and Compliance Start Date(To) is required.";
                                isValid = false;
                            }
                        }
                        else {
                            if ($('#CaseCreationStartDate_DPart').val() == "" && $('#CaseCreationEndDate_DPart').val() == "") {
                                errorList = errorList + "Created Date(From)  and Created Date(To) is required.";
                                isValid = false;
                            }
                        }
                    }
               //////////



                }

                if (!isValid) {
                    if ($('.validation-summary-errors').length != 0) {
                        //if validion errors div is present add errors to list
                        $('.validation-summary-errors ul').append(errorList);
                    } else {
                        //if validion errors div is not present update validation-summary-valid div and add errors to list
                        $('.validation-summary-valid').addClass('validation-summary-errors').removeClass('validation-summary-valid');
                        $('.validation-summary-errors ul').append(errorList);
                    }
                }
                return isValid;
            } catch (e) {
                throw e;
            }
        };


         window.onload = function () {
            if ($('#DiscrepancyStartDate').val() != null && $('#DiscrepancyStartDate').val() !=""){
                $('#DiscrepancyStartDate_DPart').val(getDateTimeInMMDDYYYY($('#DiscrepancyStartDate').val()));
            }
            if ($('#DiscrepancyEndDate').val() != null && $('#DiscrepancyEndDate').val() != "") {
                $('#DiscrepancyEndDate_DPart').val(getDateTimeInMMDDYYYY($('#DiscrepancyEndDate').val()));
            }
            if ($('#DOB').val() != null && $('#DOB').val() != "") {
                $('#DOB_DPart').val(getDateTimeInMMDDYYYY($('#DOB').val()));
            }
            if ($('#FirstLetterMailStartDate').val() != null && $('#FirstLetterMailStartDate').val() != "") {
                $('#FirstLetterMailStartDate_DPart').val(getDateTimeInMMDDYYYY($('#FirstLetterMailStartDate').val()));
            }
            if ($('#FirstLetterMailEndDate').val() != null && $('#FirstLetterMailEndDate').val() != "") {
                $('#FirstLetterMailEndDate_DPart').val(getDateTimeInMMDDYYYY($('#FirstLetterMailEndDate').val()));
            }
            if ($('#SecondLetterMailStartDate').val() != null && $('#SecondLetterMailStartDate').val() != "") {
                $('#SecondLetterMailStartDate_DPart').val(getDateTimeInMMDDYYYY($('#SecondLetterMailStartDate').val()));
            }
            if ($('#SecondLetterMailEndDate').val() != null && $('#SecondLetterMailEndDate').val() != "") {
                $('#SecondLetterMailEndDate_DPart').val(getDateTimeInMMDDYYYY($('#SecondLetterMailEndDate').val()));
            }
            if ($('#ComplianceStartDate').val() != null && $('#ComplianceStartDate').val() != "") {
                $('#ComplianceStartDate_DPart').val(getDateTimeInMMDDYYYY($('#ComplianceStartDate').val()));
            }
            if ($('#ComplianceEndDate').val() != null && $('#ComplianceEndDate').val() != "") {
                $('#ComplianceEndDate_DPart').val(getDateTimeInMMDDYYYY($('#ComplianceEndDate').val()));
            }
            if ($('#CaseCreationStartDate').val() != null && $('#CaseCreationStartDate').val() != "") {
                $('#CaseCreationStartDate_DPart').val(getDateTimeInMMDDYYYY($('#CaseCreationStartDate').val()));
            }
            if ($('#CaseCreationEndDate').val() != null && $('#CaseCreationEndDate').val() != "") {
                $('#CaseCreationEndDate_DPart').val(getDateTimeInMMDDYYYY($('#CaseCreationEndDate').val()));
            }
            if ($('#MemberResponseVerificationStartDate').val() != null && $('#MemberResponseVerificationStartDate').val() != "") {
                $('#MemberResponseVerificationStartDate_DPart').val(getDateTimeInMMDDYYYY($('#MemberResponseVerificationStartDate').val()));
            }
            if ($('#MemberResponseVerificationEndDate').val() != null && $('#MemberResponseVerificationEndDate').val() != "") {
                $('#MemberResponseVerificationEndDate_DPart').val(getDateTimeInMMDDYYYY($('#MemberResponseVerificationEndDate').val()));
            }
            if ($('#RequestedEffectiveStartDate').val() != null && $('#RequestedEffectiveStartDate').val() != "") {
                $('#RequestedEffectiveStartDate_DPart').val(getDateTimeInMMDDYYYY($('#RequestedEffectiveStartDate').val()));
            }
            if ($('#RequestedEffectiveEndDate').val() != null && $('#RequestedEffectiveEndDate').val() != "") {
                $('#RequestedEffectiveEndDate_DPart').val(getDateTimeInMMDDYYYY($('#RequestedEffectiveEndDate').val()));
            }
            if ($('#AdjustedCreateStartDate').val() != null && $('#AdjustedCreateStartDate').val() != "") {
                $('#AdjustedCreateStartDate_DPart').val(getDateTimeInMMDDYYYY($('#AdjustedCreateStartDate').val()));
            }
            if ($('#AdjustedCreateEndDate').val() != null && $('#AdjustedCreateEndDate').val() != "") {
                $('#AdjustedCreateEndDate_DPart').val(getDateTimeInMMDDYYYY($('#AdjustedCreateEndDate').val()));
            }
            if ($('#RPCSubmissionStartDate').val() != null && $('#RPCSubmissionStartDate').val() != "") {
                $('#RPCSubmissionStartDate_DPart').val(getDateTimeInMMDDYYYY($('#RPCSubmissionStartDate').val()));
            }
            if ($('#RPCSubmissionEndDate').val() != null && $('#RPCSubmissionEndDate').val() != "") {
                $('#RPCSubmissionEndDate_DPart').val(getDateTimeInMMDDYYYY($('#RPCSubmissionEndDate').val()));
            }
            if ($('#CMSAccountManagerApprovalStartDate').val() != null && $('#CMSAccountManagerApprovalStartDate').val() != "") {
                $('#CMSAccountManagerApprovalStartDate_DPart').val(getDateTimeInMMDDYYYY($('#CMSAccountManagerApprovalStartDate').val()));
            }
            if ($('#CMSAccountManagerApprovalEndDate').val() != null && $('#CMSAccountManagerApprovalEndDate').val() != "") {
                $('#CMSAccountManagerApprovalEndDate_DPart').val(getDateTimeInMMDDYYYY($('#CMSAccountManagerApprovalEndDate').val()));
            }
            if ($('#FDRReceivedStartDate').val() != null && $('#FDRReceivedStartDate').val() != "") {
                $('#FDRReceivedStartDate_DPart').val(getDateTimeInMMDDYYYY($('#FDRReceivedStartDate').val()));
            }
            if ($('#FDRReceivedEndDate').val() != null && $('#FDRReceivedEndDate').val() != "") {
                $('#FDRReceivedEndDate_DPart').val(getDateTimeInMMDDYYYY($('#FDRReceivedEndDate').val()));
            }
            if ($('#PeerAuditCompletionStartDate').val() != null && $('#PeerAuditCompletionStartDate').val() != "") {
                $('#PeerAuditCompletionStartDate_DPart').val(getDateTimeInMMDDYYYY($('#PeerAuditCompletionStartDate').val()));
            }
            if ($('#PeerAuditCompletionEndDate').val() != null && $('#PeerAuditCompletionEndDate').val() != "") {
                $('#PeerAuditCompletionEndDate_DPart').val(getDateTimeInMMDDYYYY($('#PeerAuditCompletionEndDate').val()));
            }
            if ($('#DisenrollmentFromDate').length > 0 && $('#DisenrollmentFromDate').val() != null && $('#DisenrollmentFromDate').val() != "") {
                $('#DisenrollmentFromDate_DPart').val(getDateTimeInMMDDYYYY($('#DisenrollmentFromDate').val()));
            }
            if ($('#DisenrollmentToDate').length > 0 && $('#DisenrollmentToDate').val() != null && $('#DisenrollmentToDate').val() != "") {
                $('#DisenrollmentToDate_DPart').val(getDateTimeInMMDDYYYY($('#DisenrollmentToDate').val()));
            }
        };
                //function to set model date time values from date time picker
        function fnGetDateIntoHdnFields() {
            var date = $('#DiscrepancyStartDate_DPart').val();
            if (date != null && date != '') {
                $('#DiscrepancyStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DiscrepancyStartDate').val(null);
            }
            date = $('#DiscrepancyEndDate_DPart').val();
            if (date != null && date != '') {
                $('#DiscrepancyEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DiscrepancyEndDate').val(null);
            }
            date = $('#DOB_DPart').val();
            if (date != null && date != '') {
                $('#DOB').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DOB').val(null);
            }
            date = $('#FirstLetterMailStartDate_DPart').val();
            if (date != null && date != '') {
                $('#FirstLetterMailStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#FirstLetterMailStartDate').val(null);
            }
            date = $('#FirstLetterMailEndDate_DPart').val();
            if (date != null && date != '') {
                $('#FirstLetterMailEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#FirstLetterMailEndDate').val(null);
            }
            date = $('#SecondLetterMailStartDate_DPart').val();
            if (date != null && date != '') {
                $('#SecondLetterMailStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#SecondLetterMailStartDate').val(null);
            }
            date = $('#SecondLetterMailEndDate_DPart').val();
            if (date != null && date != '') {
                $('#SecondLetterMailEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#SecondLetterMailEndDate').val(null);
            }
            date = $('#ComplianceStartDate_DPart').val();
            if (date != null && date != '') {
                $('#ComplianceStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#ComplianceStartDate').val(null);
            }
            date = $('#ComplianceEndDate_DPart').val();
            if (date != null && date != '') {
                $('#ComplianceEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#ComplianceEndDate').val(null);
            }
            date = $('#CaseCreationStartDate_DPart').val();
            if (date != null && date != '') {
                $('#CaseCreationStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#CaseCreationStartDate').val(null);
            }
            date = $('#CaseCreationEndDate_DPart').val();
            if (date != null && date != '') {
                $('#CaseCreationEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#CaseCreationEndDate').val(null);
            }
            date = $('#MemberResponseVerificationStartDate_DPart').val();
            if (date != null && date != '') {
                $('#MemberResponseVerificationStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#MemberResponseVerificationStartDate').val(null);
            }
            date = $('#MemberResponseVerificationEndDate_DPart').val();
            if (date != null && date != '') {
                $('#MemberResponseVerificationEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#MemberResponseVerificationEndDate').val(null);
            }
            date = $('#RequestedEffectiveStartDate_DPart').val();
            if (date != null && date != '') {
                $('#RequestedEffectiveStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#RequestedEffectiveStartDate').val(null);
            }
            date = $('#RequestedEffectiveEndDate_DPart').val();
            if (date != null && date != '') {
                $('#RequestedEffectiveEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#RequestedEffectiveEndDate').val(null);
            }
            date = $('#AdjustedCreateStartDate_DPart').val();
            if (date != null && date != '') {
                $('#AdjustedCreateStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#AdjustedCreateStartDate').val(null);
            }
            date = $('#AdjustedCreateEndDate_DPart').val();
            if (date != null && date != '') {
                $('#AdjustedCreateEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#AdjustedCreateEndDate').val(null);
            }
            date = $('#RPCSubmissionStartDate_DPart').val();
            if (date != null && date != '') {
                $('#RPCSubmissionStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#RPCSubmissionStartDate').val(null);
            }
            date = $('#RPCSubmissionEndDate_DPart').val();
            if (date != null && date != '') {
                $('#RPCSubmissionEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#RPCSubmissionEndDate').val(null);
            }
            date = $('#CMSAccountManagerApprovalStartDate_DPart').val();
            if (date != null && date != '') {
                $('#CMSAccountManagerApprovalStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#CMSAccountManagerApprovalStartDate').val(null);
            }
            date = $('#CMSAccountManagerApprovalEndDate_DPart').val();
            if (date != null && date != '') {
                $('#CMSAccountManagerApprovalEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#CMSAccountManagerApprovalEndDate').val(null);
            }
            date = $('#FDRReceivedStartDate_DPart').val();
            if (date != null && date != '') {
                $('#FDRReceivedStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#FDRReceivedStartDate').val(null);
            }
            date = $('#FDRReceivedEndDate_DPart').val();
            if (date != null && date != '') {
                $('#FDRReceivedEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#FDRReceivedEndDate').val(null);
            }
            date = $('#PeerAuditCompletionStartDate_DPart').val();
            if (date != null && date != '') {
                $('#PeerAuditCompletionStartDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#PeerAuditCompletionStartDate').val(null);
            }
            date = $('#PeerAuditCompletionEndDate_DPart').val();
            if (date != null && date != '') {
                $('#PeerAuditCompletionEndDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#PeerAuditCompletionEndDate').val(null);
            }
            date = $('#DisenrollmentFromDate_DPart').val();
            if (date != null && date != '') {
                $('#DisenrollmentFromDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DisenrollmentFromDate').val(null);
            }
            date = $('#DisenrollmentToDate_DPart').val();
            if (date != null && date != '') {
                $('#DisenrollmentToDate').val(getDateTimeInMMDDYYYY(date));
            } else {
                $('#DisenrollmentToDate').val(null);
            }
         };

         $(document).on("change", "#ddlDiscrepancyCat", function (event) {
             try {

                 ///need to check user permission///
                 var categoryID = $(this).val();
                 //queueId = "";
                 //  $("#divMassUpdateResult").empty().html('<div style="text-align:center;color: red; ">No Records Found</div >');
                 $("#ddlQueue").empty().append($("<option></option>").val("0").html(enums.DropdownDefaultValue));
                 if (categoryID != "" && categoryID != "0") {
                     discCatId = categoryID;
                     fnLoadQueue(categoryID);
                 }
             } catch (e) {
                 MainLayout.fnAlertMessege("Error!", "An error occoured!");
             }
         });

         fnLoadQueue = function (categoryID) {
             try {
                 $.ajax({
                     url: urlLoadQueue,
                     data: JSON.stringify({ "categoryID": categoryID }),
                     type: "POST",
                     dataType: "json",
                     contentType: "application/json; charset=utf-8",
                     success: function (data) {
                         if (data != null && data != "") {
                             $.each(data, function (i, val) {
                                 $("#ddlQueue").append($("<option></option>").val(val.CMN_LookupMasterChildRef).html(val.LookupMasterChildValue));
                             });

                         }
                     },
                     error: function (x) {
                         MainLayout.fnAlertMessege("Error!", "An error occoured!");
                     },
                 });

             } catch (e) {
                 throw ex;
             }
         };
         $(document).on("keypress", function (e) {
             try {
                 if (e.which == 13 && !$(e.target).is("textarea") && $("#btnSearch").is(":visible") && $("#btnSearch").length > 0) {
                     fnProcessSearch();
                 }

             } catch (e) {

             }
         });


        dataTable=MainLayout.fnInitialiseDataTable($('#tblSearchResult'));
    </script>
}
