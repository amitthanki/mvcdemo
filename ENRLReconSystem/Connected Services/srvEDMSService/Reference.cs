//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ENRLReconSystem.srvEDMSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameVal", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class NameVal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_DocList", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_DocList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.DocListInfo[] DocumentListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public ENRLReconSystem.srvEDMSService.DocListInfo[] DocumentList {
            get {
                return this.DocumentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentListField, value) != true)) {
                    this.DocumentListField = value;
                    this.RaisePropertyChanged("DocumentList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocListInfo", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class DocListInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal[] DocFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal[] ExtraPropsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocID {
            get {
                return this.DocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocIDField, value) != true)) {
                    this.DocIDField = value;
                    this.RaisePropertyChanged("DocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentClass {
            get {
                return this.DocumentClassField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassField, value) != true)) {
                    this.DocumentClassField = value;
                    this.RaisePropertyChanged("DocumentClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public ENRLReconSystem.srvEDMSService.NameVal[] DocFields {
            get {
                return this.DocFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocFieldsField, value) != true)) {
                    this.DocFieldsField = value;
                    this.RaisePropertyChanged("DocFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public ENRLReconSystem.srvEDMSService.NameVal[] ExtraProps {
            get {
                return this.ExtraPropsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraPropsField, value) != true)) {
                    this.ExtraPropsField = value;
                    this.RaisePropertyChanged("ExtraProps");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_DocInfo", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_DocInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlternateDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlternateDocumentSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlternateDocumentId {
            get {
                return this.AlternateDocumentIdField;
            }
            set {
                if ((this.AlternateDocumentIdField.Equals(value) != true)) {
                    this.AlternateDocumentIdField = value;
                    this.RaisePropertyChanged("AlternateDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlternateDocumentSize {
            get {
                return this.AlternateDocumentSizeField;
            }
            set {
                if ((this.AlternateDocumentSizeField.Equals(value) != true)) {
                    this.AlternateDocumentSizeField = value;
                    this.RaisePropertyChanged("AlternateDocumentSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateDateField, value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentSize {
            get {
                return this.DocumentSizeField;
            }
            set {
                if ((this.DocumentSizeField.Equals(value) != true)) {
                    this.DocumentSizeField = value;
                    this.RaisePropertyChanged("DocumentSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentTitle {
            get {
                return this.DocumentTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTitleField, value) != true)) {
                    this.DocumentTitleField = value;
                    this.RaisePropertyChanged("DocumentTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_Doc", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_Doc : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DocumentData {
            get {
                return this.DocumentDataField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentDataField, value) != true)) {
                    this.DocumentDataField = value;
                    this.RaisePropertyChanged("DocumentData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.Error[] ErrorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal[] ExtraPropsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocID {
            get {
                return this.DocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocIDField, value) != true)) {
                    this.DocIDField = value;
                    this.RaisePropertyChanged("DocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentPath {
            get {
                return this.DocumentPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentPathField, value) != true)) {
                    this.DocumentPathField = value;
                    this.RaisePropertyChanged("DocumentPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.Error[] ErrorList {
            get {
                return this.ErrorListField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorListField, value) != true)) {
                    this.ErrorListField = value;
                    this.RaisePropertyChanged("ErrorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.NameVal[] ExtraProps {
            get {
                return this.ExtraPropsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraPropsField, value) != true)) {
                    this.ExtraPropsField = value;
                    this.RaisePropertyChanged("ExtraProps");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Error : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDescription {
            get {
                return this.ErrorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescriptionField, value) != true)) {
                    this.ErrorDescriptionField = value;
                    this.RaisePropertyChanged("ErrorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocRequest", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class DocRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentClass {
            get {
                return this.DocumentClassField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassField, value) != true)) {
                    this.DocumentClassField = value;
                    this.RaisePropertyChanged("DocumentClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys {
            get {
                return this.DocumentKeysField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentKeysField, value) != true)) {
                    this.DocumentKeysField = value;
                    this.RaisePropertyChanged("DocumentKeys");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_MultiDocList", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_MultiDocList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.DocListInfoMultiDocument[] DocumentListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public ENRLReconSystem.srvEDMSService.DocListInfoMultiDocument[] DocumentList {
            get {
                return this.DocumentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentListField, value) != true)) {
                    this.DocumentListField = value;
                    this.RaisePropertyChanged("DocumentList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocListInfoMultiDocument", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class DocListInfoMultiDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal[] DocFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal[] ExtraPropsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocID {
            get {
                return this.DocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocIDField, value) != true)) {
                    this.DocIDField = value;
                    this.RaisePropertyChanged("DocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string DocumentClass {
            get {
                return this.DocumentClassField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassField, value) != true)) {
                    this.DocumentClassField = value;
                    this.RaisePropertyChanged("DocumentClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public ENRLReconSystem.srvEDMSService.NameVal[] DocFields {
            get {
                return this.DocFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocFieldsField, value) != true)) {
                    this.DocFieldsField = value;
                    this.RaisePropertyChanged("DocFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public ENRLReconSystem.srvEDMSService.NameVal[] ExtraProps {
            get {
                return this.ExtraPropsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraPropsField, value) != true)) {
                    this.ExtraPropsField = value;
                    this.RaisePropertyChanged("ExtraProps");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentsRequest", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class DocumentsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal[] DocumentClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.NameVal[] DocumentClass {
            get {
                return this.DocumentClassField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassField, value) != true)) {
                    this.DocumentClassField = value;
                    this.RaisePropertyChanged("DocumentClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys {
            get {
                return this.DocumentKeysField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentKeysField, value) != true)) {
                    this.DocumentKeysField = value;
                    this.RaisePropertyChanged("DocumentKeys");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClassIDPair", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class ClassIDPair : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentClass {
            get {
                return this.DocumentClassField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassField, value) != true)) {
                    this.DocumentClassField = value;
                    this.RaisePropertyChanged("DocumentClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string DocID {
            get {
                return this.DocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocIDField, value) != true)) {
                    this.DocIDField = value;
                    this.RaisePropertyChanged("DocID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_MultiDoc", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_MultiDoc : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.DocInfoMultiDocument[] MultiDocumentInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DocumentData {
            get {
                return this.DocumentDataField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentDataField, value) != true)) {
                    this.DocumentDataField = value;
                    this.RaisePropertyChanged("DocumentData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.DocInfoMultiDocument[] MultiDocumentInfo {
            get {
                return this.MultiDocumentInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MultiDocumentInfoField, value) != true)) {
                    this.MultiDocumentInfoField = value;
                    this.RaisePropertyChanged("MultiDocumentInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocInfoMultiDocument", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class DocInfoMultiDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocID {
            get {
                return this.DocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocIDField, value) != true)) {
                    this.DocIDField = value;
                    this.RaisePropertyChanged("DocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentClass {
            get {
                return this.DocumentClassField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassField, value) != true)) {
                    this.DocumentClassField = value;
                    this.RaisePropertyChanged("DocumentClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_DocID", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_DocID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.DocListInfo[] DocumentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.DocListInfo[] DocumentList {
            get {
                return this.DocumentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentListField, value) != true)) {
                    this.DocumentListField = value;
                    this.RaisePropertyChanged("DocumentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_Add", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_Add : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIDField, value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_AvailableDocs", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_AvailableDocs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.DocClassInfo[] AvailableUserDocsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.DocClassInfo[] AvailableUserDocs {
            get {
                return this.AvailableUserDocsField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableUserDocsField, value) != true)) {
                    this.AvailableUserDocsField = value;
                    this.RaisePropertyChanged("AvailableUserDocs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocClassInfo", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class DocClassInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocClassDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DocClassOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.DocFieldInfo[] DocFieldsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocClassDesc {
            get {
                return this.DocClassDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DocClassDescField, value) != true)) {
                    this.DocClassDescField = value;
                    this.RaisePropertyChanged("DocClassDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocClassName {
            get {
                return this.DocClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocClassNameField, value) != true)) {
                    this.DocClassNameField = value;
                    this.RaisePropertyChanged("DocClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DocClassOptions {
            get {
                return this.DocClassOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocClassOptionsField, value) != true)) {
                    this.DocClassOptionsField = value;
                    this.RaisePropertyChanged("DocClassOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.DocFieldInfo[] DocFields {
            get {
                return this.DocFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocFieldsField, value) != true)) {
                    this.DocFieldsField = value;
                    this.RaisePropertyChanged("DocFields");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocFieldInfo", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class DocFieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayYNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DropDownValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entry_DisplayYNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entry_RequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequiredField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayType {
            get {
                return this.DisplayTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTypeField, value) != true)) {
                    this.DisplayTypeField = value;
                    this.RaisePropertyChanged("DisplayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayYN {
            get {
                return this.DisplayYNField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayYNField, value) != true)) {
                    this.DisplayYNField = value;
                    this.RaisePropertyChanged("DisplayYN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DropDownValues {
            get {
                return this.DropDownValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.DropDownValuesField, value) != true)) {
                    this.DropDownValuesField = value;
                    this.RaisePropertyChanged("DropDownValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entry_DisplayYN {
            get {
                return this.Entry_DisplayYNField;
            }
            set {
                if ((object.ReferenceEquals(this.Entry_DisplayYNField, value) != true)) {
                    this.Entry_DisplayYNField = value;
                    this.RaisePropertyChanged("Entry_DisplayYN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entry_Required {
            get {
                return this.Entry_RequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.Entry_RequiredField, value) != true)) {
                    this.Entry_RequiredField = value;
                    this.RaisePropertyChanged("Entry_Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldLabel {
            get {
                return this.FieldLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldLabelField, value) != true)) {
                    this.FieldLabelField = value;
                    this.RaisePropertyChanged("FieldLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLen {
            get {
                return this.MaxLenField;
            }
            set {
                if ((this.MaxLenField.Equals(value) != true)) {
                    this.MaxLenField = value;
                    this.RaisePropertyChanged("MaxLen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.RequiredField, value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LifecycleChangeActions", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    public enum LifecycleChangeActions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P8_PROMOTE = 1048576,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P8_DEMOTE = 2097152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P8_RESET = 5242880,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_LifeCycleState", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_LifeCycleState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_DeleteDocument", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_DeleteDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_DocProps", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_DocProps : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response_DocClassInfo", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class Response_DocClassInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocClassDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DocClassOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.DocFieldInfo[] DocFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocClassDesc {
            get {
                return this.DocClassDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DocClassDescField, value) != true)) {
                    this.DocClassDescField = value;
                    this.RaisePropertyChanged("DocClassDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocClassName {
            get {
                return this.DocClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocClassNameField, value) != true)) {
                    this.DocClassNameField = value;
                    this.RaisePropertyChanged("DocClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DocClassOptions {
            get {
                return this.DocClassOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocClassOptionsField, value) != true)) {
                    this.DocClassOptionsField = value;
                    this.RaisePropertyChanged("DocClassOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.DocFieldInfo[] DocFields {
            get {
                return this.DocFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocFieldsField, value) != true)) {
                    this.DocFieldsField = value;
                    this.RaisePropertyChanged("DocFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameValOperator", Namespace="http://schemas.datacontract.org/2004/07/CMWSService")]
    [System.SerializableAttribute()]
    public partial class NameValOperator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ENRLReconSystem.srvEDMSService.NameVal NameValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ENRLReconSystem.srvEDMSService.NameVal NameVal {
            get {
                return this.NameValField;
            }
            set {
                if ((object.ReferenceEquals(this.NameValField, value) != true)) {
                    this.NameValField = value;
                    this.RaisePropertyChanged("NameVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srvEDMSService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ExportSearchResults", ReplyAction="http://tempuri.org/IService/ExportSearchResultsResponse")]
        ENRLReconSystem.srvEDMSService.Response_DocList ExportSearchResults(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes, string ExportCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ExportSearchResults", ReplyAction="http://tempuri.org/IService/ExportSearchResultsResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocList> ExportSearchResultsAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes, string ExportCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentListwithIndex", ReplyAction="http://tempuri.org/IService/GetDocumentListwithIndexResponse")]
        ENRLReconSystem.srvEDMSService.Response_DocList GetDocumentListwithIndex(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes, int startindex, int maxresultcount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentListwithIndex", ReplyAction="http://tempuri.org/IService/GetDocumentListwithIndexResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocList> GetDocumentListwithIndexAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes, int startindex, int maxresultcount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentInfo", ReplyAction="http://tempuri.org/IService/GetDocumentInfoResponse")]
        ENRLReconSystem.srvEDMSService.Response_DocInfo GetDocumentInfo(string cmGUID, string DocumentClass, int DocumentID, string UserID, string Application, string alternateDocPropertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentInfo", ReplyAction="http://tempuri.org/IService/GetDocumentInfoResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocInfo> GetDocumentInfoAsync(string cmGUID, string DocumentClass, int DocumentID, string UserID, string Application, string alternateDocPropertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocument", ReplyAction="http://tempuri.org/IService/GetDocumentResponse")]
        ENRLReconSystem.srvEDMSService.Response_Doc GetDocument(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocument", ReplyAction="http://tempuri.org/IService/GetDocumentResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_Doc> GetDocumentAsync(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddToReprint", ReplyAction="http://tempuri.org/IService/AddToReprintResponse")]
        bool AddToReprint(string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string DocID, string Application, string cmGUID, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddToReprint", ReplyAction="http://tempuri.org/IService/AddToReprintResponse")]
        System.Threading.Tasks.Task<bool> AddToReprintAsync(string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string DocID, string Application, string cmGUID, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentLink", ReplyAction="http://tempuri.org/IService/GetDocumentLinkResponse")]
        ENRLReconSystem.srvEDMSService.Document GetDocumentLink(string GUID, string DocClass, string AppMSID, string DocID, string UserDomainID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentLink", ReplyAction="http://tempuri.org/IService/GetDocumentLinkResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Document> GetDocumentLinkAsync(string GUID, string DocClass, string AppMSID, string DocID, string UserDomainID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentByName", ReplyAction="http://tempuri.org/IService/GetDocumentByNameResponse")]
        ENRLReconSystem.srvEDMSService.Response_Doc GetDocumentByName(string cmGUID, string DocumentClass, string DocumentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentByName", ReplyAction="http://tempuri.org/IService/GetDocumentByNameResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_Doc> GetDocumentByNameAsync(string cmGUID, string DocumentClass, string DocumentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentList", ReplyAction="http://tempuri.org/IService/GetDocumentListResponse")]
        ENRLReconSystem.srvEDMSService.Response_DocList GetDocumentList(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentList", ReplyAction="http://tempuri.org/IService/GetDocumentListResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocList> GetDocumentListAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMultiDocumentList", ReplyAction="http://tempuri.org/IService/GetMultiDocumentListResponse")]
        ENRLReconSystem.srvEDMSService.Response_MultiDocList GetMultiDocumentList(string cmGUID, ENRLReconSystem.srvEDMSService.DocRequest[] DocumentsRequest, string Application, string UserID, string ReturnDescForCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMultiDocumentList", ReplyAction="http://tempuri.org/IService/GetMultiDocumentListResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_MultiDocList> GetMultiDocumentListAsync(string cmGUID, ENRLReconSystem.srvEDMSService.DocRequest[] DocumentsRequest, string Application, string UserID, string ReturnDescForCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMultiDocumentList2", ReplyAction="http://tempuri.org/IService/GetMultiDocumentList2Response")]
        ENRLReconSystem.srvEDMSService.Response_MultiDocList GetMultiDocumentList2(string cmGUID, ENRLReconSystem.srvEDMSService.DocumentsRequest DocumentsRequest, string Application, string UserID, string ReturnDescForCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMultiDocumentList2", ReplyAction="http://tempuri.org/IService/GetMultiDocumentList2Response")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_MultiDocList> GetMultiDocumentList2Async(string cmGUID, ENRLReconSystem.srvEDMSService.DocumentsRequest DocumentsRequest, string Application, string UserID, string ReturnDescForCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMultiDocuments", ReplyAction="http://tempuri.org/IService/GetMultiDocumentsResponse")]
        ENRLReconSystem.srvEDMSService.Response_MultiDoc GetMultiDocuments(string cmGUID, ENRLReconSystem.srvEDMSService.ClassIDPair[] DocClassDocIDPairs, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMultiDocuments", ReplyAction="http://tempuri.org/IService/GetMultiDocumentsResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_MultiDoc> GetMultiDocumentsAsync(string cmGUID, ENRLReconSystem.srvEDMSService.ClassIDPair[] DocClassDocIDPairs, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentID", ReplyAction="http://tempuri.org/IService/GetDocumentIDResponse")]
        ENRLReconSystem.srvEDMSService.Response_DocID GetDocumentID(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string IncludeMetaData, string Application, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentID", ReplyAction="http://tempuri.org/IService/GetDocumentIDResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocID> GetDocumentIDAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string IncludeMetaData, string Application, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddDocument", ReplyAction="http://tempuri.org/IService/AddDocumentResponse")]
        ENRLReconSystem.srvEDMSService.Response_Add AddDocument(string cmGUID, string DocumentClass, string DocumentName, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, byte[] DocumentData, string UserID, string Application, bool WithContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddDocument", ReplyAction="http://tempuri.org/IService/AddDocumentResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_Add> AddDocumentAsync(string cmGUID, string DocumentClass, string DocumentName, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, byte[] DocumentData, string UserID, string Application, bool WithContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserEmailAddress", ReplyAction="http://tempuri.org/IService/GetUserEmailAddressResponse")]
        string GetUserEmailAddress(string DomainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserEmailAddress", ReplyAction="http://tempuri.org/IService/GetUserEmailAddressResponse")]
        System.Threading.Tasks.Task<string> GetUserEmailAddressAsync(string DomainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvailableDocList", ReplyAction="http://tempuri.org/IService/GetAvailableDocListResponse")]
        ENRLReconSystem.srvEDMSService.Response_AvailableDocs GetAvailableDocList(string cmGUID, string DomainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvailableDocList", ReplyAction="http://tempuri.org/IService/GetAvailableDocListResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_AvailableDocs> GetAvailableDocListAsync(string cmGUID, string DomainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetLifeCycleState", ReplyAction="http://tempuri.org/IService/SetLifeCycleStateResponse")]
        ENRLReconSystem.srvEDMSService.Response_LifeCycleState SetLifeCycleState(string cmGUID, string DocumentClass, string DocumentID, ENRLReconSystem.srvEDMSService.LifecycleChangeActions LifecycleChangeAction, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetLifeCycleState", ReplyAction="http://tempuri.org/IService/SetLifeCycleStateResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_LifeCycleState> SetLifeCycleStateAsync(string cmGUID, string DocumentClass, string DocumentID, ENRLReconSystem.srvEDMSService.LifecycleChangeActions LifecycleChangeAction, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLifeCycleState", ReplyAction="http://tempuri.org/IService/GetLifeCycleStateResponse")]
        ENRLReconSystem.srvEDMSService.Response_LifeCycleState GetLifeCycleState(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLifeCycleState", ReplyAction="http://tempuri.org/IService/GetLifeCycleStateResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_LifeCycleState> GetLifeCycleStateAsync(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteDocument", ReplyAction="http://tempuri.org/IService/DeleteDocumentResponse")]
        ENRLReconSystem.srvEDMSService.Response_DeleteDocument DeleteDocument(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteDocument", ReplyAction="http://tempuri.org/IService/DeleteDocumentResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DeleteDocument> DeleteDocumentAsync(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetDocumentProperties", ReplyAction="http://tempuri.org/IService/SetDocumentPropertiesResponse")]
        ENRLReconSystem.srvEDMSService.Response_DocProps SetDocumentProperties(string cmGUID, string DocumentID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentProps, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetDocumentProperties", ReplyAction="http://tempuri.org/IService/SetDocumentPropertiesResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocProps> SetDocumentPropertiesAsync(string cmGUID, string DocumentID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentProps, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocClassInfo", ReplyAction="http://tempuri.org/IService/GetDocClassInfoResponse")]
        ENRLReconSystem.srvEDMSService.Response_DocClassInfo GetDocClassInfo(string cmGUID, string DocumentClass, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocClassInfo", ReplyAction="http://tempuri.org/IService/GetDocClassInfoResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocClassInfo> GetDocClassInfoAsync(string cmGUID, string DocumentClass, string UserID, string Application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentListByOperator", ReplyAction="http://tempuri.org/IService/GetDocumentListByOperatorResponse")]
        ENRLReconSystem.srvEDMSService.Response_DocList GetDocumentListByOperator(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameValOperator[] NameValOperatorDocumentKeys, string Application, string UserID, string ReturnDescForCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentListByOperator", ReplyAction="http://tempuri.org/IService/GetDocumentListByOperatorResponse")]
        System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocList> GetDocumentListByOperatorAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameValOperator[] NameValOperatorDocumentKeys, string Application, string UserID, string ReturnDescForCodes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ENRLReconSystem.srvEDMSService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ENRLReconSystem.srvEDMSService.IService>, ENRLReconSystem.srvEDMSService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DocList ExportSearchResults(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes, string ExportCount) {
            return base.Channel.ExportSearchResults(cmGUID, DocumentClass, DocumentKeys, Application, UserID, ReturnDescForCodes, ExportCount);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocList> ExportSearchResultsAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes, string ExportCount) {
            return base.Channel.ExportSearchResultsAsync(cmGUID, DocumentClass, DocumentKeys, Application, UserID, ReturnDescForCodes, ExportCount);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DocList GetDocumentListwithIndex(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes, int startindex, int maxresultcount) {
            return base.Channel.GetDocumentListwithIndex(cmGUID, DocumentClass, DocumentKeys, Application, UserID, ReturnDescForCodes, startindex, maxresultcount);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocList> GetDocumentListwithIndexAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes, int startindex, int maxresultcount) {
            return base.Channel.GetDocumentListwithIndexAsync(cmGUID, DocumentClass, DocumentKeys, Application, UserID, ReturnDescForCodes, startindex, maxresultcount);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DocInfo GetDocumentInfo(string cmGUID, string DocumentClass, int DocumentID, string UserID, string Application, string alternateDocPropertyName) {
            return base.Channel.GetDocumentInfo(cmGUID, DocumentClass, DocumentID, UserID, Application, alternateDocPropertyName);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocInfo> GetDocumentInfoAsync(string cmGUID, string DocumentClass, int DocumentID, string UserID, string Application, string alternateDocPropertyName) {
            return base.Channel.GetDocumentInfoAsync(cmGUID, DocumentClass, DocumentID, UserID, Application, alternateDocPropertyName);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_Doc GetDocument(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application) {
            return base.Channel.GetDocument(cmGUID, DocumentClass, DocumentID, UserID, Application);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_Doc> GetDocumentAsync(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application) {
            return base.Channel.GetDocumentAsync(cmGUID, DocumentClass, DocumentID, UserID, Application);
        }
        
        public bool AddToReprint(string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string DocID, string Application, string cmGUID, string UserID) {
            return base.Channel.AddToReprint(DocumentClass, DocumentKeys, DocID, Application, cmGUID, UserID);
        }
        
        public System.Threading.Tasks.Task<bool> AddToReprintAsync(string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string DocID, string Application, string cmGUID, string UserID) {
            return base.Channel.AddToReprintAsync(DocumentClass, DocumentKeys, DocID, Application, cmGUID, UserID);
        }
        
        public ENRLReconSystem.srvEDMSService.Document GetDocumentLink(string GUID, string DocClass, string AppMSID, string DocID, string UserDomainID, string Application) {
            return base.Channel.GetDocumentLink(GUID, DocClass, AppMSID, DocID, UserDomainID, Application);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Document> GetDocumentLinkAsync(string GUID, string DocClass, string AppMSID, string DocID, string UserDomainID, string Application) {
            return base.Channel.GetDocumentLinkAsync(GUID, DocClass, AppMSID, DocID, UserDomainID, Application);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_Doc GetDocumentByName(string cmGUID, string DocumentClass, string DocumentName) {
            return base.Channel.GetDocumentByName(cmGUID, DocumentClass, DocumentName);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_Doc> GetDocumentByNameAsync(string cmGUID, string DocumentClass, string DocumentName) {
            return base.Channel.GetDocumentByNameAsync(cmGUID, DocumentClass, DocumentName);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DocList GetDocumentList(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes) {
            return base.Channel.GetDocumentList(cmGUID, DocumentClass, DocumentKeys, Application, UserID, ReturnDescForCodes);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocList> GetDocumentListAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string Application, string UserID, string ReturnDescForCodes) {
            return base.Channel.GetDocumentListAsync(cmGUID, DocumentClass, DocumentKeys, Application, UserID, ReturnDescForCodes);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_MultiDocList GetMultiDocumentList(string cmGUID, ENRLReconSystem.srvEDMSService.DocRequest[] DocumentsRequest, string Application, string UserID, string ReturnDescForCodes) {
            return base.Channel.GetMultiDocumentList(cmGUID, DocumentsRequest, Application, UserID, ReturnDescForCodes);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_MultiDocList> GetMultiDocumentListAsync(string cmGUID, ENRLReconSystem.srvEDMSService.DocRequest[] DocumentsRequest, string Application, string UserID, string ReturnDescForCodes) {
            return base.Channel.GetMultiDocumentListAsync(cmGUID, DocumentsRequest, Application, UserID, ReturnDescForCodes);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_MultiDocList GetMultiDocumentList2(string cmGUID, ENRLReconSystem.srvEDMSService.DocumentsRequest DocumentsRequest, string Application, string UserID, string ReturnDescForCodes) {
            return base.Channel.GetMultiDocumentList2(cmGUID, DocumentsRequest, Application, UserID, ReturnDescForCodes);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_MultiDocList> GetMultiDocumentList2Async(string cmGUID, ENRLReconSystem.srvEDMSService.DocumentsRequest DocumentsRequest, string Application, string UserID, string ReturnDescForCodes) {
            return base.Channel.GetMultiDocumentList2Async(cmGUID, DocumentsRequest, Application, UserID, ReturnDescForCodes);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_MultiDoc GetMultiDocuments(string cmGUID, ENRLReconSystem.srvEDMSService.ClassIDPair[] DocClassDocIDPairs, string UserID, string Application) {
            return base.Channel.GetMultiDocuments(cmGUID, DocClassDocIDPairs, UserID, Application);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_MultiDoc> GetMultiDocumentsAsync(string cmGUID, ENRLReconSystem.srvEDMSService.ClassIDPair[] DocClassDocIDPairs, string UserID, string Application) {
            return base.Channel.GetMultiDocumentsAsync(cmGUID, DocClassDocIDPairs, UserID, Application);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DocID GetDocumentID(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string IncludeMetaData, string Application, string UserID) {
            return base.Channel.GetDocumentID(cmGUID, DocumentClass, DocumentKeys, IncludeMetaData, Application, UserID);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocID> GetDocumentIDAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, string IncludeMetaData, string Application, string UserID) {
            return base.Channel.GetDocumentIDAsync(cmGUID, DocumentClass, DocumentKeys, IncludeMetaData, Application, UserID);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_Add AddDocument(string cmGUID, string DocumentClass, string DocumentName, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, byte[] DocumentData, string UserID, string Application, bool WithContent) {
            return base.Channel.AddDocument(cmGUID, DocumentClass, DocumentName, DocumentKeys, DocumentData, UserID, Application, WithContent);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_Add> AddDocumentAsync(string cmGUID, string DocumentClass, string DocumentName, ENRLReconSystem.srvEDMSService.NameVal[] DocumentKeys, byte[] DocumentData, string UserID, string Application, bool WithContent) {
            return base.Channel.AddDocumentAsync(cmGUID, DocumentClass, DocumentName, DocumentKeys, DocumentData, UserID, Application, WithContent);
        }
        
        public string GetUserEmailAddress(string DomainID) {
            return base.Channel.GetUserEmailAddress(DomainID);
        }
        
        public System.Threading.Tasks.Task<string> GetUserEmailAddressAsync(string DomainID) {
            return base.Channel.GetUserEmailAddressAsync(DomainID);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_AvailableDocs GetAvailableDocList(string cmGUID, string DomainID) {
            return base.Channel.GetAvailableDocList(cmGUID, DomainID);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_AvailableDocs> GetAvailableDocListAsync(string cmGUID, string DomainID) {
            return base.Channel.GetAvailableDocListAsync(cmGUID, DomainID);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_LifeCycleState SetLifeCycleState(string cmGUID, string DocumentClass, string DocumentID, ENRLReconSystem.srvEDMSService.LifecycleChangeActions LifecycleChangeAction, string UserID, string Application) {
            return base.Channel.SetLifeCycleState(cmGUID, DocumentClass, DocumentID, LifecycleChangeAction, UserID, Application);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_LifeCycleState> SetLifeCycleStateAsync(string cmGUID, string DocumentClass, string DocumentID, ENRLReconSystem.srvEDMSService.LifecycleChangeActions LifecycleChangeAction, string UserID, string Application) {
            return base.Channel.SetLifeCycleStateAsync(cmGUID, DocumentClass, DocumentID, LifecycleChangeAction, UserID, Application);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_LifeCycleState GetLifeCycleState(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application) {
            return base.Channel.GetLifeCycleState(cmGUID, DocumentClass, DocumentID, UserID, Application);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_LifeCycleState> GetLifeCycleStateAsync(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application) {
            return base.Channel.GetLifeCycleStateAsync(cmGUID, DocumentClass, DocumentID, UserID, Application);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DeleteDocument DeleteDocument(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application) {
            return base.Channel.DeleteDocument(cmGUID, DocumentClass, DocumentID, UserID, Application);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DeleteDocument> DeleteDocumentAsync(string cmGUID, string DocumentClass, string DocumentID, string UserID, string Application) {
            return base.Channel.DeleteDocumentAsync(cmGUID, DocumentClass, DocumentID, UserID, Application);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DocProps SetDocumentProperties(string cmGUID, string DocumentID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentProps, string UserID, string Application) {
            return base.Channel.SetDocumentProperties(cmGUID, DocumentID, DocumentClass, DocumentProps, UserID, Application);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocProps> SetDocumentPropertiesAsync(string cmGUID, string DocumentID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameVal[] DocumentProps, string UserID, string Application) {
            return base.Channel.SetDocumentPropertiesAsync(cmGUID, DocumentID, DocumentClass, DocumentProps, UserID, Application);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DocClassInfo GetDocClassInfo(string cmGUID, string DocumentClass, string UserID, string Application) {
            return base.Channel.GetDocClassInfo(cmGUID, DocumentClass, UserID, Application);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocClassInfo> GetDocClassInfoAsync(string cmGUID, string DocumentClass, string UserID, string Application) {
            return base.Channel.GetDocClassInfoAsync(cmGUID, DocumentClass, UserID, Application);
        }
        
        public ENRLReconSystem.srvEDMSService.Response_DocList GetDocumentListByOperator(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameValOperator[] NameValOperatorDocumentKeys, string Application, string UserID, string ReturnDescForCodes) {
            return base.Channel.GetDocumentListByOperator(cmGUID, DocumentClass, NameValOperatorDocumentKeys, Application, UserID, ReturnDescForCodes);
        }
        
        public System.Threading.Tasks.Task<ENRLReconSystem.srvEDMSService.Response_DocList> GetDocumentListByOperatorAsync(string cmGUID, string DocumentClass, ENRLReconSystem.srvEDMSService.NameValOperator[] NameValOperatorDocumentKeys, string Application, string UserID, string ReturnDescForCodes) {
            return base.Channel.GetDocumentListByOperatorAsync(cmGUID, DocumentClass, NameValOperatorDocumentKeys, Application, UserID, ReturnDescForCodes);
        }
    }
}
